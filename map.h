#include <SFML\Graphics.hpp>
#include <iostream>
const int HEIGHT_MAP = 40;//размер карты высота
const int WIDTH_MAP = 76;//размер карты ширина 


sf::String TileMap[HEIGHT_MAP] = {
	"000000000000000000000001111111111111111111111111111111111111111111111111111",
	"000000000000000000000001111111111111111111111111111111111111111111111111111",
	"00                  f001111111111111111111111111111111111111111111111111111",
	"00                  f001111111111111111111111111111111111111111111111111111",
	"00                  f001111111111111111111111111111111111111111111111111111",
	"00                  f001111111111111111111111111111111111111111111111111111",
	"00ffffffffffffffff  f001111111111111111111111111111111111111111111111111111",
	"000000000000000000  f000000000000000000000000000000000000000000000000000000",
	"000000000000000000  f000000000000000000000000000000000000000000000000000000",
	"111111111111111100                                                       00",
	"111111111111111100                                                       00",
	"111111111111111100   ffffffffffffffffffffffffffffffffffffff   fffffffffff00",
	"111111111111111100  f00000000000000000000000000000000000000   f000000000000",
	"111111111111111100  f00000000000000000000000000000000000000   f000000000000",
	"111111111111111100  f00fffffffffffffffffffffff00ffffffffff0   fffffffffff00",
	"111111111111111100  f00                      f00          0   f0         00",
	"111111111111111100  f00                      f00                         00",
	"111111111111111100  f00                      f00 o   o   g     g   o   g 00",
	"111111111111111100                           f00                         00",
	"111111111111111100                           f00                         00",
	"111111111111111100   ff                      f00 o   g   o     g   o   g 00",
	"111111111111111100  f00                      f00                         00",
	"111111111111111100  f00                      f00                         00",
	"111111111111111100  f00                      f00 g   g   g    fo   g   g 00",
	"111111111111111100  f00                      f00             f0          00",
	"111111111111111100  f00fffffffffffffffffffffff00fffffffffff  f0ffffffffff00",
	"000000000000000000  f0000000000000000000000000000000000000f  f0000000000000",
	"000000000000000000  f0000000000000000000000000000000000000f  f0000000000000",
	"000                                                                     f00",
	"000                                                                     f00",
	"000             fffffffffffffffffffffffffffffffffffffffffffffff         f00",
	"000             f0000000000000000000000000000000000000000000000         f00",
	"000     w       f0000000000000000000000000000000000000000000000         f00",
	"000             f0011111111111111111111111111111111111111111100         f00",
	"000             f0011111111111111111111111111111111111111111100         f00",
	"000             f0011111111111111111111111111111111111111111100         f00",
	"000             f0011111111111111111111111111111111111111111100         f00",
	"000ffffffffffffff0011111111111111111111111111111111111111111100ffffffffff00",
	"000000000000000000000000000000000000000000000000000000000000000000000000000",
	"000000000000000000000000000000000000000000000000000000000000000000000000000", };
void randomMapGenerate() {//рандомно расставляем камни


	int randomElementX = 0;//случайный элемент по горизонтали
	int randomElementY = 0;//случ эл-т по вертикали

	
	randomElementX = 1 + rand() % (WIDTH_MAP - 1);
	randomElementY = 1 + rand() % (HEIGHT_MAP - 1);
	std::cout << randomElementX << " " << randomElementY << std::endl;

	if (TileMap[randomElementY][randomElementX] == ' ') {
		TileMap[randomElementY][randomElementX] = 's'; 
	}

	randomElementX = 1 + rand() % (WIDTH_MAP - 1);
	randomElementY = 1 + rand() % (HEIGHT_MAP - 1);
	std::cout << randomElementX << " " << randomElementY << std::endl;
	if (TileMap[randomElementY][randomElementX] == ' ') {
		TileMap[randomElementY][randomElementX] = 'h';
	}
	
}